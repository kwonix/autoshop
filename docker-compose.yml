services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: autogadget-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-autoshop}
      POSTGRES_USER: ${POSTGRES_USER:-autoshop_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./backend/database/migrations.sql:/docker-entrypoint-initdb.d/02-migrations.sql
    ports:
      - "5432:5432"
    networks:
      - autoshop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-autoshop_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autogadget-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-autoshop}
      DB_USER: ${POSTGRES_USER:-autoshop_user}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
    volumes:
      - ./frontend/img:/app/frontend/img
    ports:
      - "3000:3000"
    networks:
      - autoshop-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: autogadget-nginx
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/usr/share/nginx/html/frontend:ro
      - ./admin:/usr/share/nginx/html/admin:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - autoshop-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  autoshop-network:
    driver: bridge
